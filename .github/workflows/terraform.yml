name: "Terraform From Github"

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  terraform:
    name: "Terraform"
    env:
      TERRAFORM_ENV_OPTIONS: " -var-file=hackday2023.tfvars"
    runs-on: ubuntu-latest
    steps:
    - name: Login in with Azure
      uses: azure/login@v1
      with:
        creds: '${{ secrets.AZURE_CREDENTIALS }}'
    - name: Azure CLI script
      uses: azure/CLI@v1
      with:
        azcliversion: 2.0.72
        inlineScript: |
          az account show
    - name: Checkout      
      uses: actions/checkout@v3
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        # terraform_version: 0.13.0:
        cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}
    - name: Terraform Format
      id: fmt
      working-directory: ./terraform
      run: terraform fmt -check
    - name: Terraform Init
      id: init
      working-directory: ./terraform
      run: terraform  init $TERRAFORM_ENV_OPTIONS
    - name: Terraform Validate
      id: validate
      working-directory: ./terraform
      run: terraform validate -no-color 
    - name: Terraform Plan
      id: plan
      working-directory: ./terraform
      if: github.event_name == 'pull_request'
      run: terraform  plan -no-color -input=false $TERRAFORM_ENV_OPTIONS 
      continue-on-error: true
    - uses: actions/github-script@v6
      if: github.event_name == 'pull_request'
      env:
        PLAN: "terraform\n${{ steps.plan.outputs.stdout }}"
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          const output = `#### Terraform Format and Style üñå\`${{ steps.fmt.outcome }}\`
          #### Terraform Initialization ‚öôÔ∏è\`${{ steps.init.outcome }}\`
          #### Terraform Validation ü§ñ\`${{ steps.validate.outcome }}\`
          #### Terraform Plan üìñ\`${{ steps.plan.outcome }}\`
          <details><summary>Show Plan</summary>
          \`\`\`\n
          ${process.env.PLAN}
          \`\`\`
          </details>
          *Pushed by: @${{ github.actor }}, Action: \`${{ github.event_name }}\`*`;
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: output
          })
    - name: Terraform Plan Status
      if: steps.plan.outcome == 'failure'
      run: exit 1
    - name: Terraform Apply
      if: github.ref == 'refs/heads/main' && github.event_name == 'push'
      working-directory: ./terraform
      run: terraform $TERRAFORM_ENV_OPTIONS apply -auto-approve -input=false
